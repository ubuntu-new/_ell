<?phpnamespace app\controllers;use Yii;use app\models\English;use app\models\EnglishSearch;use app\models\Englishcenter;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;/** * EnglishController implements the CRUD actions for English model. */class EnglishController extends Controller{    /**     * {@inheritdoc}     */    public function behaviors()    {        return [            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'delete' => ['POST'],                ],            ],        ];    }    /**     * Lists all English models.     * @return mixed     */    public function actionIndex()    {        $model = new Englishcenter();        $time = new \DateTime('now');        $today = $time->format('Y-m-d');        //$hits = Product::find()->where(['>','date' ,  $today])->all();        //$hits = English::find()->orderBy(['date' => SORT_DESC])->limit(5)->all();        $hits = English::find()->all();        // $hits = Product::find()->where(['hit' => '1'])->limit(6)->all();        //debug($hits);        // return $this->render('index', compact('hits'));        if ($model->load(Yii::$app->request->post()) && $model->save() && $model->validate()) {            if ($model->save()) {                Yii::$app->session->setFlash('success', 'Your Message Is Sent!');            }            else{                Yii::$app->session->setFlash('error', 'Your Message Was Not Sent!');            }        }        $model->id = null;        $model->name = null;        $model->bday = null;        $model->phone = null;        $model->email = null;        $model->generalenglish = null;        $model->esol = null;        $model->ielts = null;        $model->toefl = null;        $model->sat = null;        $model->gmat = null;        $model->gre = null;        $model->visible = null;        return $this->render('index', [            'model' => $model,            'hits'=>$hits,            'ragac'=>"asasdasd"        ]);//        $searchModel = new EnglishSearch();//        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);////        return $this->render('index', [//            'searchModel' => $searchModel,//            'dataProvider' => $dataProvider,//        ]);    }//if(empty($products))//throw new \yii\web\HttpException(404, 'Nothing to show');//return $this->render('view', compact('products'));    /**     * Displays a single English model.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionView($id)    {        return $this->render('view', [            'model' => $this->findModel($id),        ]);    }    /**     * Creates a new English model.     * If creation is successful, the browser will be redirected to the 'view' page.     * @return mixed     */    public function actionCreate()    {        $model = new English();        if ($model->load(Yii::$app->request->post()) && $model->save()) {            return $this->redirect(['view', 'id' => $model->id]);        }        return $this->render('create', [            'model' => $model,        ]);    }    /**     * Updates an existing English model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionUpdate($id)    {        $model = $this->findModel($id);        if ($model->load(Yii::$app->request->post()) && $model->save()) {            return $this->redirect(['view', 'id' => $model->id]);        }        return $this->render('update', [            'model' => $model,        ]);    }    /**     * Deletes an existing English model.     * If deletion is successful, the browser will be redirected to the 'index' page.     * @param integer $id     * @return mixed     * @throws NotFoundHttpException if the model cannot be found     */    public function actionDelete($id)    {        $this->findModel($id)->delete();        return $this->redirect(['index']);    }    /**     * Finds the English model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param integer $id     * @return English the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = English::findOne($id)) !== null) {            return $model;        }        throw new NotFoundHttpException('The requested page does not exist.');    }    public function actionForm(){        $model = new Englishcenter();        if ($model->load(Yii::$app->request->post()) && $model->save()&& $model->validate()) {            if ($model->save()) {                    Yii::$app->mailer->compose('english', ['model' => $model])                        ->setFrom('infonargiza@gmail.com')                        ->setTo('infonargiza@gmail.com')                        ->setSubject('English Center')                        ->send();                Yii::$app->session->setFlash('success', 'Your Message Is Sent!');            }            else{                Yii::$app->session->setFlash('error', 'Your Message Was Not Sent!');                /* \Yii::$app->mailer->compose('study', ['model' => $model])                     ->setFrom('levani76@mail.ru')                     ->setTo($model->email)                     ->setSubject("Order")                     ->send();*/            }        }        $model->id = null;        $model->name = null;        $model->bday = null;        $model->phone = null;        $model->email = null;        $model->generalenglish = null;        $model->esol = null;        $model->ielts = null;        $model->toefl = null;        $model->sat = null;        $model->gmat = null;        $model->gre = null;        $model->visible = null;        return $this->render('form', [            'model' => $model,        ]);    }}